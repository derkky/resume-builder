{"version":3,"sources":["components/personalDetailsInput.js","components/descriptionInput.js","components/educationDetailsInput.js","components/workDetailsInput.js","components/addInfoInput.js","components/resumeHeader.js","components/educationSection.js","components/ccaDetailsInput.js","components/workSection.js","components/ccaSection.js","components/addInfoSection.js","App.js","reportWebVitals.js","index.js"],"names":["PersonalDetailsInput","props","className","htmlFor","type","name","onChange","updatePersonalInfo","DescriptionInput","descriptionList","map","description","updateDescription","id","onClick","deleteDescription","addDescription","EducationDetailsInput","schoolList","school","Fragment","deleteSchool","updateSchool","addSchool","WorkDetailsInput","workList","work","deleteWork","updateWork","addWork","AddInfoInput","ResumeHeader","personalInfo","phoneNumber","email","website","EducationSection","schoolName","Date","start","toLocaleDateString","year","month","end","course","cap","text","CcaDetailsInput","ccaList","cca","deleteCca","updateCca","addCca","WorkSection","company","jobTitle","CcaSection","organisation","position","AddInfoSection","addInfoList","info","App","useState","setPersonalInfo","uniqid","educationInfo","setEducationInfo","workInfo","setWorkInfo","ccaInfo","setCcaInfo","addInfo","setAddInfo","ev","value","target","now","filter","dataset","schoolid","index","findIndex","update","$set","parentid","$push","descriptionid","descripIndex","workid","ccaid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.745b61de.chunk.js","sourcesContent":["const PersonalDetailsInput = (props) => {\r\n    return (\r\n        <div className=\"inputContainer\">\r\n          <h2> Personal Details </h2>\r\n          <label htmlFor=\"name\"> Name </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={props.updatePersonalInfo}\r\n          />\r\n          <label htmlFor=\"phoneNumber\"> Phone Number </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"phoneNumber\"\r\n            onChange={props.updatePersonalInfo}\r\n          />\r\n          <label htmlFor=\"email\"> Email </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            onChange={props.updatePersonalInfo}\r\n          />\r\n          <label htmlFor=\"website\"> Website </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"website\"\r\n            onChange={props.updatePersonalInfo}\r\n          />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonalDetailsInput","const DescriptionInput = (props) => {\r\n    return (\r\n        <div className=\"descriptionInput\">\r\n            <label> Description </label>\r\n            {props.descriptionList.map((description) => {\r\n                return(\r\n                <div key={description.id}>\r\n                    <input type=\"text\" \r\n                        className=\"descriptionTextInput\" \r\n                        onChange={props.updateDescription}\r\n                        data-parentid={props.id} \r\n                        data-descriptionid={description.id}/>\r\n                    <button \r\n                        className=\"deleteButton\" \r\n                        data-parentid={props.id} \r\n                        data-descriptionid={description.id} \r\n                        onClick={props.deleteDescription}> Delete</button>\r\n                </div>\r\n                )\r\n            }\r\n            )}\r\n            <button className=\"addButton\" data-parentid={props.id} onClick={props.addDescription}> Add Description </button>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DescriptionInput","import React from \"react\";\r\nimport DescriptionInput from \"./descriptionInput\"\r\n\r\nconst EducationDetailsInput = (props) => {\r\n\r\n  return (\r\n      <div className=\"inputContainer\">\r\n        <h2> Education </h2>\r\n        {props.schoolList.map((school) => {\r\n          return(\r\n            <React.Fragment key={school.id}>\r\n              <label> \r\n                  <div>\r\n                  School Name\r\n                  <button \r\n                      className=\"deleteButton\"\r\n                      data-schoolid={school.id}\r\n                      onClick={props.deleteSchool}\r\n                  > Delete School </button>\r\n                  </div> \r\n              </label>\r\n              <input\r\n                  type=\"text\"\r\n                  name=\"schoolName\" \r\n                  data-schoolid={school.id}\r\n                  onChange={props.updateSchool}\r\n              />\r\n              <label> Start Date </label>\r\n              <input\r\n                  type=\"month\"\r\n                  name=\"start\"\r\n                  data-schoolid={school.id}\r\n                  onChange={props.updateSchool}\r\n              />\r\n              <label> End Date </label>\r\n              <input\r\n                  type=\"month\"\r\n                  name=\"end\"\r\n                  data-schoolid={school.id}\r\n                  onChange={props.updateSchool}\r\n              />\r\n              <label> Course Title </label>\r\n              <input\r\n                  type=\"text\"\r\n                  name=\"course\"\r\n                  data-schoolid={school.id}\r\n                  onChange={props.updateSchool}\r\n              />\r\n              <label> CAP </label>\r\n              <input\r\n                  type=\"text\"\r\n                  name=\"cap\"\r\n                  data-schoolid={school.id}\r\n                  onChange={props.updateSchool}\r\n              />    \r\n              <DescriptionInput \r\n                  id={school.id} \r\n                  descriptionList={school.descriptionList} \r\n                  addDescription={props.addDescription} \r\n                  deleteDescription={props.deleteDescription}\r\n                  updateDescription={props.updateDescription}/>\r\n            </React.Fragment>  \r\n            )})}\r\n        <button className=\"addButton\" onClick={props.addSchool}> Add school </button>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default EducationDetailsInput","import React from \"react\"\r\nimport DescriptionInput from \"./descriptionInput\"\r\n\r\nconst WorkDetailsInput = (props) => {\r\n    return(\r\n        <div className=\"inputContainer\">\r\n          <h2> Working Experience </h2>\r\n          {props.workList.map(work => {\r\n            return(\r\n              <React.Fragment key={work.id}>\r\n                <label> \r\n                <div>\r\n                  Company\r\n                  <button \r\n                    className=\"deleteButton\"\r\n                    data-workid={work.id}\r\n                    onClick={props.deleteWork}\r\n                  > Delete Work </button>\r\n                </div> \r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"company\"\r\n                  data-workid={work.id}\r\n                  onChange={props.updateWork}\r\n                />\r\n                <label> Job Title </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"jobTitle\"\r\n                  data-workid={work.id}\r\n                  onChange={props.updateWork}\r\n                />\r\n                <label> Start Date </label>\r\n                <input\r\n                  type=\"month\"\r\n                  name=\"start\"\r\n                  data-workid={work.id}\r\n                  onChange={props.updateWork}\r\n                />\r\n                <label> End Date </label>\r\n                <input\r\n                  type=\"month\"\r\n                  name=\"end\"\r\n                  data-workid={work.id}\r\n                  onChange={props.updateWork}\r\n                />\r\n                <DescriptionInput\r\n                  id={work.id}\r\n                  descriptionList={work.descriptionList}\r\n                  addDescription={props.addDescription} \r\n                  deleteDescription={props.deleteDescription}\r\n                  updateDescription={props.updateDescription}/>\r\n              </React.Fragment>\r\n            )\r\n          })}\r\n          \r\n\r\n          <button className=\"addButton\" onClick={props.addWork}> Add Work </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WorkDetailsInput","import DescriptionInput from \"./descriptionInput\"\r\n\r\nconst AddInfoInput = (props) =>{\r\n    return(\r\n        <div className=\"inputContainer\">\r\n          <h2> Additional Information </h2>\r\n          <DescriptionInput\r\n           descriptionList={props.descriptionList} \r\n           addDescription={props.addDescription} \r\n           deleteDescription={props.deleteDescription}\r\n           updateDescription={props.updateDescription}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddInfoInput","const ResumeHeader = (props) => {\r\n    return(\r\n        <div className=\"resumeHeader\">\r\n          <h1>{props.personalInfo.name}</h1>\r\n          <span>{props.personalInfo.phoneNumber}</span>\r\n          <span>{props.personalInfo.email}</span>\r\n          <span>{props.personalInfo.website}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResumeHeader","const EducationSection = (props) => {\r\n    return(\r\n        <div className=\"sectionWithItems\">\r\n          <h2> Education </h2>\r\n          {props.schoolList.map(school => {\r\n            return(\r\n              <div className=\"sectionItem\" key={school.id}>\r\n                <div className=\"itemHeader\">\r\n                  <h3> {school.schoolName} </h3>\r\n                  <h3 className=\"dates\"> \r\n                    {new Date(school.start).toLocaleDateString(\"en-us\", {year:\"numeric\", month:\"short\"})} to {new Date(school.end).toLocaleDateString(\"en-us\", {year:\"numeric\", month:\"short\"})}\r\n                  </h3>\r\n                </div>\r\n                <div className=\"itemSubheader\">\r\n                  <span> {school.course} </span>\r\n                </div>\r\n                <div className=\"itemDescription\">\r\n                  <ul>\r\n                    <li> {school.cap} </li>\r\n                    {school.descriptionList.map(description => {\r\n                      return(\r\n                        <li key={description.id} data-descriptionid={description.id}> {description.text} </li>\r\n                      )\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n\r\n            )\r\n          })}\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EducationSection","import DescriptionInput from \"./descriptionInput\"\r\nimport React from \"react\"\r\n\r\nconst CcaDetailsInput = (props) => {\r\n    return(\r\n        <div className=\"inputContainer\">\r\n          <h2> Co-Curricular Activities </h2>\r\n          {props.ccaList.map(cca => {\r\n            return(\r\n              <React.Fragment key={cca.id}>\r\n                <label> \r\n                <div>\r\n                  Organisation\r\n                  <button \r\n                    className=\"deleteButton\"\r\n                    data-ccaid={cca.id}\r\n                    onClick={props.deleteCca}\r\n                  > Delete CCA </button>\r\n                </div> \r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"organisation\"\r\n                  data-ccaid={cca.id}\r\n                  onChange={props.updateCca}\r\n                />\r\n                <label> Position </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"position\"\r\n                  data-ccaid={cca.id}\r\n                  onChange={props.updateCca}\r\n                />\r\n                <label> Start Date </label>\r\n                <input\r\n                  type=\"month\"\r\n                  name=\"start\"\r\n                  data-ccaid={cca.id}\r\n                  onChange={props.updateCca}\r\n                />\r\n                <label> End Date </label>\r\n                <input\r\n                  type=\"month\"\r\n                  name=\"end\"\r\n                  data-ccaid={cca.id}\r\n                  onChange={props.updateCca}\r\n                />\r\n                <DescriptionInput\r\n                  id={cca.id}\r\n                  descriptionList={cca.descriptionList}\r\n                  addDescription={props.addDescription} \r\n                  deleteDescription={props.deleteDescription}\r\n                  updateDescription={props.updateDescription}/>\r\n              </React.Fragment>\r\n            )\r\n          })}\r\n          \r\n\r\n          <button className=\"addButton\" onClick={props.addCca}> Add CCA </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CcaDetailsInput","const WorkSection = (props) => {\r\n    return(\r\n        <div className=\"sectionWithItems\">\r\n          <h2> Working Experience </h2>\r\n          {props.workList.map(work => {\r\n            return(\r\n              <div className=\"sectionItem\" key={work.id}>\r\n                <div className=\"itemHeader\">\r\n                  <h3> {work.company} </h3>\r\n                  <h3 className=\"dates\"> \r\n                    {new Date(work.start).toLocaleDateString(\"en-us\", {year:\"numeric\", month:\"short\"})} to {new Date(work.end).toLocaleDateString(\"en-us\", {year:\"numeric\", month:\"short\"})}\r\n                  </h3>\r\n                </div>\r\n                <div className=\"itemSubheader\">\r\n                  <span> {work.jobTitle} </span>\r\n                </div>\r\n                <div className=\"itemDescription\">\r\n                  <ul>\r\n                    {work.descriptionList.map(description => {\r\n                      return(\r\n                        <li key={description.id} data-descriptionid={description.id}> {description.text} </li>\r\n                      )\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n\r\n            )\r\n          })}\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WorkSection","const CcaSection = (props) => {\r\n    return(\r\n        <div className=\"sectionWithItems\">\r\n          <h2> Co-Curricular Activities </h2>\r\n          {props.ccaList.map(cca => {\r\n            return(\r\n              <div className=\"sectionItem\" key={cca.id}>\r\n                <div className=\"itemHeader\">\r\n                  <h3> {cca.organisation} </h3>\r\n                  <h3 className=\"dates\"> \r\n                  {new Date(cca.start).toLocaleDateString(\"en-us\", {year:\"numeric\", month:\"short\"})} to {new Date(cca.end).toLocaleDateString(\"en-us\", {year:\"numeric\", month:\"short\"})}\r\n                  </h3>\r\n                </div>\r\n                <div className=\"itemSubheader\">\r\n                  <span> {cca.position} </span>\r\n                </div>\r\n                <div className=\"itemDescription\">\r\n                  <ul>\r\n                    {cca.descriptionList.map(description => {\r\n                      return(\r\n                        <li key={description.id} data-descriptionid={description.id}> {description.text} </li>\r\n                      )\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n\r\n            )\r\n          })}\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CcaSection","const AddInfoSection = (props) => {\r\n    return(\r\n        <div className=\"addInfoSection\">\r\n            <h2> Additional Info </h2>\r\n            <div className=\"itemDescription\">\r\n                <ul>\r\n                    {props.addInfoList.map(info => {\r\n                        return(\r\n                            <li key={info.id} data-descriptionid={info.id}> {info.text} </li>\r\n                        )})}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddInfoSection","import React, { useState } from \"react\";\nimport \"./styles/styles.css\"\nimport PersonalDetailsInput from \"./components/personalDetailsInput.js\"\nimport EducationDetailsInput from \"./components/educationDetailsInput.js\"\nimport WorkDetailsInput from \"./components/workDetailsInput.js\"\nimport AddInfoInput from \"./components/addInfoInput.js\"\nimport uniqid from \"uniqid\"\nimport ResumeHeader from \"./components/resumeHeader\";\nimport EducationSection from \"./components/educationSection\"\nimport CcaDetailsInput from \"./components/ccaDetailsInput\";\nimport update from \"immutability-helper\"\nimport WorkSection from \"./components/workSection\";\nimport CcaSection from \"./components/ccaSection\";\nimport AddInfoSection from \"./components/addInfoSection\";\n\nconst App = () => {\n\n  const [personalInfo, setPersonalInfo] = useState({\n    name: \"Jamie Tan\",\n    phoneNumber: \"8888-0654\",\n    email: \"jamie.tan@u.nus.edu\",\n    website: \"linkedin.com/in/jamie-tan\"})\n\n    const updatePersonalInfo = (ev) => {\n      const value = ev.target.value\n      setPersonalInfo({\n        ...personalInfo,\n        [ev.target.name]: value\n      })\n    }\n\n  const [educationInfo, setEducationInfo] = useState(\n    [{schoolName:\"National University of Singapore\", \n    id: uniqid(), \n    start: \"Aug 2013\",\n    end: \"May 2017\",\n    course: \"Bachelor of Arts, Major in Global Affairs\",\n    cap: \"CAP: 4.5/5 (First Class Honours)\",\n    descriptionList: [{id:uniqid(), text:\"Recipient of NUS Dean Scholarship, a merit based scholarship awarded for four years\"}]}]\n  )\n\n \n  const addSchool = () => {\n    setEducationInfo([\n      ...educationInfo, {\n        schoolName:\"New School\", \n        id: uniqid(), \n        start: Date.now(),\n        end: Date.now(),\n        course: \"Course Name\",\n        cap: \"CAP: \",\n        descriptionList: [{id:uniqid(), text:\"Description\"}]}\n    ])\n  }\n  \n  const deleteSchool = (ev) => {\n    setEducationInfo(\n      educationInfo.filter(school => school.id !== ev.target.dataset.schoolid)\n    )\n  }\n\n  const addSchoolDescription = (ev) => {\n    const index = educationInfo.findIndex(school => school.id === ev.target.dataset.parentid)\n\n    setEducationInfo(\n      update(educationInfo, {\n        [index] : {\n          descriptionList : {$push: [{id:uniqid(), text:\"Description\"}]}\n        }\n      })\n    )\n  }\n\n  const deleteSchoolDescription = (ev) => {\n    const index = educationInfo.findIndex(school => school.id === ev.target.dataset.parentid)\n\n    setEducationInfo(\n      update(educationInfo, {\n        [index] : {\n          descriptionList : {$set: educationInfo[index].descriptionList.filter(description => description.id !== ev.target.dataset.descriptionid)}\n        }\n      })\n    )\n  }\n\n  const updateSchool = (ev) => {\n    const index = educationInfo.findIndex(school => school.id === ev.target.dataset.schoolid)\n\n    setEducationInfo(\n      update(educationInfo, {\n        [index] : {\n          [ev.target.name] : {$set: ev.target.value}\n        }\n      })\n    )\n  }\n\n const updateSchoolDescription = (ev) => {\n    const index = educationInfo.findIndex(school => school.id === ev.target.dataset.parentid)\n    const descripIndex = educationInfo[index].descriptionList.findIndex(description => description.id === ev.target.dataset.descriptionid)\n    setEducationInfo(\n      update(educationInfo, {\n        [index] : {\n          descriptionList : {\n            [descripIndex] : {\n              text: {$set: ev.target.value}\n            }\n          }\n        }\n      })\n    )\n  }\n\n  const [workInfo, setWorkInfo] = useState(\n    [{company:\"Samsung Electronics\", \n    id: uniqid(), \n    start: \"Jun 2015\",\n    end: \"Jul 2015\",\n    jobTitle: \"Global Launching Strategy Team Intern\",\n    descriptionList: [\n      {id:uniqid(), \n      text:\"Led cross-functional team to produce a video project of techniques to sales representatives in Southeast Asia by writing a script, producing the content, and preparing a presentation.\"},\n      {id:uniqid(),\n      text:\"Developed design concepts, product mottos, and copyrighted descriptions to endorse the upcoming line of Flat Panel TVs by designing new product sales guides and training packets.\"}]}]\n  )\n\n\n  const addWork = () => {\n    setWorkInfo([\n      ...workInfo, {\n        company: \"Company\",\n        id: uniqid(),\n        start: Date.now(),\n        end: Date.now(),\n        jobTitle: \"Position\",\n        descriptionList: [{id:uniqid(), text:\"Description\"}]\n      }\n    ])\n  }\n \n  const deleteWork = (ev) => {\n    setWorkInfo(\n      workInfo.filter(work => work.id !== ev.target.dataset.workid)\n    )\n  }\n\n  const addWorkDescription = (ev) => {\n    const index = workInfo.findIndex(work => work.id === ev.target.dataset.parentid)\n\n    setWorkInfo(\n      update(workInfo, {\n        [index] : {\n          descriptionList : {$push: [{id:uniqid(), text:\"Description\"}]}\n        }\n      })\n    )\n  }\n\n  const deleteWorkDescription = (ev) => {\n    const index = workInfo.findIndex(work => work.id === ev.target.dataset.parentid)\n\n    setWorkInfo(\n      update(workInfo, {\n        [index] : {\n          descriptionList : {$set: workInfo[index].descriptionList.filter(description => description.id !== ev.target.dataset.descriptionid)}\n        }\n      })\n    )\n  }\n\n  const updateWork = (ev) => {\n    const index = workInfo.findIndex(work => work.id === ev.target.dataset.workid)\n\n    setWorkInfo(\n      update(workInfo, {\n        [index] : {\n          [ev.target.name] : {$set: ev.target.value}\n        }\n      })\n    )\n  }\n\n const updateWorkDescription = (ev) => {\n    const index = workInfo.findIndex(work => work.id === ev.target.dataset.parentid)\n    const descripIndex = workInfo[index].descriptionList.findIndex(description => description.id === ev.target.dataset.descriptionid)\n    setWorkInfo(\n      update(workInfo, {\n        [index] : {\n          descriptionList : {\n            [descripIndex] : {\n              text: {$set: ev.target.value}\n            }\n          }\n        }\n      })\n    )\n  }\n\n  const [ccaInfo, setCcaInfo] = useState(\n    [{organisation:\"NUS International Relations & Political Association\", \n    id: uniqid(), \n    start: \"May 2013\",\n    end: \"May 2015\",\n    position: \"Co-founder & President\",\n    descriptionList: [\n      {id:uniqid(), \n      text:\"Coordinated inaugural panel of speakers representing eight different career paths to better eudcate and counsel over 30 members on unique career opportunities related to public diplomacy\"},\n      {id: uniqid(),\n      text: \"Initiated seminar to inform club members on successful tactics for writing resumes and cover letters, increasing student levels of knowledge and confidence to pursue competitive internships\" }]}]\n  )\n\n\n  const addCca = () => {\n    setCcaInfo([\n      ...ccaInfo, {\n        organisation: \"CCA\",\n        id: uniqid(),\n        start: Date.now(),\n        end: Date.now(),\n        position: \"Position\",\n        descriptionList: [{id:uniqid(), text:\"Description\"}]\n      }\n    ])\n  }\n \n  const deleteCca = (ev) => {\n    setCcaInfo(\n      ccaInfo.filter(cca => cca.id !== ev.target.dataset.ccaid)\n    )\n  }\n\n  const addCcaDescription = (ev) => {\n    const index = ccaInfo.findIndex(cca => cca.id === ev.target.dataset.parentid)\n\n    setCcaInfo(\n      update(ccaInfo, {\n        [index] : {\n          descriptionList : {$push: [{id:uniqid(), text:\"Description\"}]}\n        }\n      })\n    )\n  }\n\n  const deleteCcaDescription = (ev) => {\n    const index = ccaInfo.findIndex(cca => cca.id === ev.target.dataset.parentid)\n\n    setCcaInfo(\n      update(ccaInfo, {\n        [index] : {\n          descriptionList : {$set: ccaInfo[index].descriptionList.filter(description => description.id !== ev.target.dataset.descriptionid)}\n        }\n      })\n    )\n  }\n\n  const updateCca = (ev) => {\n    const index = ccaInfo.findIndex(cca => cca.id === ev.target.dataset.ccaid)\n\n    setCcaInfo(\n      update(ccaInfo, {\n        [index] : {\n          [ev.target.name] : {$set: ev.target.value}\n        }\n      })\n    )\n  }\n\n const updateCcaDescription = (ev) => {\n    const index = ccaInfo.findIndex(cca => cca.id === ev.target.dataset.parentid)\n    const descripIndex = ccaInfo[index].descriptionList.findIndex(description => description.id === ev.target.dataset.descriptionid)\n    setCcaInfo(\n      update(ccaInfo, {\n        [index] : {\n          descriptionList : {\n            [descripIndex] : {\n              text: {$set: ev.target.value}\n            }\n          }\n        }\n      })\n    )\n  }\n\n  const [addInfo, setAddInfo] = useState([\n    {id: uniqid(), text: \"Languages: English (native), German (conversational), Mandarin Chinese (beginner)\"},\n    {id: uniqid(), text: \"Skills: Adobe Photoshop, Illustrator, and InDesign; HTML and CSS; Microsoft Office.\"}])\n\n  const addAddInfo = () => {\n    setAddInfo([\n      ...addInfo, {id: uniqid(), text:\"Description\"}\n    ])\n\n  }\n\n  const deleteAddInfo = (ev) => {\n\n    setAddInfo(\n      addInfo.filter(info => info.id !== ev.target.dataset.descriptionid)\n    )\n  }\n\n  const updateAddInfo = (ev) => {\n    const index = addInfo.findIndex(info => info.id === ev.target.dataset.descriptionid)\n    setAddInfo(update(addInfo, {\n      [index] : {\n        text: {$set: ev.target.value}\n      }\n    }))\n  }\n\n  return(\n    <div className=\"App\">\n      <div className=\"detailInput\">\n        <h3> Input details below </h3>\n        <PersonalDetailsInput\n          updatePersonalInfo={updatePersonalInfo}/>\n\n        <EducationDetailsInput \n          schoolList={educationInfo} \n          addSchool={addSchool} \n          deleteSchool={deleteSchool}\n          updateSchool={updateSchool} \n          addDescription={addSchoolDescription} \n          deleteDescription={deleteSchoolDescription}\n          updateDescription={updateSchoolDescription}/>\n\n        <WorkDetailsInput\n          workList={workInfo}\n          addWork={addWork}\n          deleteWork={deleteWork}\n          updateWork={updateWork} \n          addDescription={addWorkDescription} \n          deleteDescription={deleteWorkDescription}\n          updateDescription={updateWorkDescription}/>\n\n        <CcaDetailsInput\n          ccaList={ccaInfo}\n          addCca={addCca}\n          deleteCca={deleteCca}\n          updateCca={updateCca} \n          addDescription={addCcaDescription} \n          deleteDescription={deleteCcaDescription}\n          updateDescription={updateCcaDescription}/> \n\n        <AddInfoInput\n          descriptionList={addInfo}\n          addDescription={addAddInfo}\n          deleteDescription={deleteAddInfo}\n          updateDescription={updateAddInfo}/>\n\n      </div>\n      <div className=\"resume\">\n        <ResumeHeader\n          personalInfo={personalInfo} />\n        <EducationSection\n          schoolList={educationInfo} />\n        <WorkSection\n          workList={workInfo} />\n        \n        <CcaSection\n          ccaList={ccaInfo}/>\n\n        <AddInfoSection\n          addInfoList={addInfo}/>\n          \n      </div>\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}